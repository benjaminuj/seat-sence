name: Java CI with Gradle

on:
  push:
    branches: [ "dev" ]
  # pull_request:
  #   branches: [ "dev" ]
  
permissions:
  contents: read
  
jobs:
  build:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0.30
        env:
          MYSQL_ROOT_PASSWORD: root!
          MYSQL_DATABASE: testdb
          MYSQL_USER: admin
          MYSQL_PASSWORD: admin!
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v4

    # Caching Gradle
    - name: Cache Gradle
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{  runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties')
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Gradle Authorization
      run: chmod +x gradlew

    # Gradle run
    - name: Gradle Build Run
      run: ./gradlew build

      # Gradle test
    - name: Test with Gradle
      run: ./gradlew --info test

    - name: Build with Gradle Wrapper
      env:
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_NAME: testdb
        DB_USERNAME: admin
        DB_PASSWORD: admin!
        profile: local   # 로컬 프로파일 활성화
      run: ./gradlew clean build --warning-mode=all --stacktrace

    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
    #   with:
    #     gradle-version: '8.9'
    #
    # - name: Build with Gradle 8.9
    #   run: gradle build
    
    - name: Cleanup Gradle Cache
      if: ${{ always() }}
      run: |
        rm -f ~/.gradle/caches/modules-2/modules-2.lock
        rm -f ~/.gradle/caches/modules-2/gc.properties

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
